#if !defined(AFX_PERCENT_H__B4E7CD0F_758D_4580_A8C6_825534FF8E70__INCLUDED_)
#define AFX_PERCENT_H__B4E7CD0F_758D_4580_A8C6_825534FF8E70__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CPicture;
class COleFont;

/////////////////////////////////////////////////////////////////////////////
// CPercent wrapper class

class CPercent : public CWnd
{
protected:
	DECLARE_DYNCREATE(CPercent)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xa0ed9404, 0x6466, 0x11cf, { 0xbc, 0x8b, 0x20, 0x74, 0x2, 0xc1, 0x6, 0x27 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	CPicture GetBackPicture();
	void SetBackPicture(LPDISPATCH);
	BOOL GetEnabled();
	void SetEnabled(BOOL);
	long GetBevelInner();
	void SetBevelInner(long);
	long GetBevelOuter();
	void SetBevelOuter(long);
	short GetBevelWidth();
	void SetBevelWidth(short);
	short GetBorderWidth();
	void SetBorderWidth(short);
	BOOL GetOutline();
	void SetOutline(BOOL);
	long GetOutlineAlign();
	void SetOutlineAlign(long);
	unsigned long GetOutlineColor();
	void SetOutlineColor(unsigned long);
	CString GetOutlineTitle();
	void SetOutlineTitle(LPCTSTR);
	short GetOutlineWidth();
	void SetOutlineWidth(short);
	short GetPortions();
	void SetPortions(short);
	short GetPortionID();
	void SetPortionID(short);
	unsigned long GetPortionColor();
	void SetPortionColor(unsigned long);
	CPicture GetPortionPicture();
	void SetPortionPicture(LPDISPATCH);
	double GetPortionValue();
	void SetPortionValue(double);
	unsigned long GetPortionDigitalColor();
	void SetPortionDigitalColor(unsigned long);
	double GetPortionDigitalX();
	void SetPortionDigitalX(double);
	double GetPortionDigitalY();
	void SetPortionDigitalY(double);
	double GetStartAngle();
	void SetStartAngle(double);
	long GetDigitalStyle();
	void SetDigitalStyle(long);
	long GetDirection();
	void SetDirection(long);
	double GetMax();
	void SetMax(double);
	double GetMin();
	void SetMin(double);
	long GetOrientation();
	void SetOrientation(long);
	long GetDisplayMode();
	void SetDisplayMode(long);
	long GetPercentMode();
	void SetPercentMode(long);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	CString GetFrameShape();
	void SetFrameShape(LPCTSTR);
	long GetFrameStyle();
	void SetFrameStyle(long);
	double GetFrameLeft();
	void SetFrameLeft(double);
	double GetFrameTop();
	void SetFrameTop(double);
	double GetFrameRight();
	void SetFrameRight(double);
	double GetFrameBottom();
	void SetFrameBottom(double);
	unsigned long GetFrameColor();
	void SetFrameColor(unsigned long);
	CPicture GetFramePicture();
	void SetFramePicture(LPDISPATCH);
	BOOL GetAutoRedraw();
	void SetAutoRedraw(BOOL);
	double GetDigitalPosition();
	void SetDigitalPosition(double);
	COleFont GetFont();
	void SetFont(LPDISPATCH);
	double GetPortionPercent();
	void SetPortionPercent(double);
	double Get_PortionValue();
	void Set_PortionValue(double);
	CString GetFontName();
	void SetFontName(LPCTSTR);
	float GetFontSize();
	void SetFontSize(float);
	BOOL GetFontBold();
	void SetFontBold(BOOL);
	BOOL GetFontItalic();
	void SetFontItalic(BOOL);
	BOOL GetFontStrikethru();
	void SetFontStrikethru(BOOL);
	BOOL GetFontUnderline();
	void SetFontUnderline(BOOL);
	CString GetDigitalFormat();
	void SetDigitalFormat(LPCTSTR);
	long GetMouseControl();
	void SetMouseControl(long);
	BOOL GetSingleBuffer();
	void SetSingleBuffer(BOOL);
	BOOL GetFocusOutline();
	void SetFocusOutline(BOOL);
	OLE_HANDLE GetHWnd();
	void SetHWnd(OLE_HANDLE);
	CString GetConfiguration();
	void SetConfiguration(LPCTSTR);

// Operations
public:
	void ShowPropertyPage();
	void Redraw();
	void RedrawStatic();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_PERCENT_H__B4E7CD0F_758D_4580_A8C6_825534FF8E70__INCLUDED_)
