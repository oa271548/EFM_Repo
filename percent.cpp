// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "percent.h"

// Dispatch interfaces referenced by this interface
#include "picture.h"
#include "font.h"

/////////////////////////////////////////////////////////////////////////////
// CPercent

IMPLEMENT_DYNCREATE(CPercent, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CPercent properties

CPicture CPercent::GetBackPicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0x1, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CPercent::SetBackPicture(LPDISPATCH propVal)
{
	SetProperty(0x1, VT_DISPATCH, propVal);
}

BOOL CPercent::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

long CPercent::GetBevelInner()
{
	long result;
	GetProperty(0x2, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetBevelInner(long propVal)
{
	SetProperty(0x2, VT_I4, propVal);
}

long CPercent::GetBevelOuter()
{
	long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetBevelOuter(long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

short CPercent::GetBevelWidth()
{
	short result;
	GetProperty(0x4, VT_I2, (void*)&result);
	return result;
}

void CPercent::SetBevelWidth(short propVal)
{
	SetProperty(0x4, VT_I2, propVal);
}

short CPercent::GetBorderWidth()
{
	short result;
	GetProperty(0x5, VT_I2, (void*)&result);
	return result;
}

void CPercent::SetBorderWidth(short propVal)
{
	SetProperty(0x5, VT_I2, propVal);
}

BOOL CPercent::GetOutline()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetOutline(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

long CPercent::GetOutlineAlign()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetOutlineAlign(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

unsigned long CPercent::GetOutlineColor()
{
	unsigned long result;
	GetProperty(0x8, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetOutlineColor(unsigned long propVal)
{
	SetProperty(0x8, VT_I4, propVal);
}

CString CPercent::GetOutlineTitle()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CPercent::SetOutlineTitle(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

short CPercent::GetOutlineWidth()
{
	short result;
	GetProperty(0xa, VT_I2, (void*)&result);
	return result;
}

void CPercent::SetOutlineWidth(short propVal)
{
	SetProperty(0xa, VT_I2, propVal);
}

short CPercent::GetPortions()
{
	short result;
	GetProperty(0xb, VT_I2, (void*)&result);
	return result;
}

void CPercent::SetPortions(short propVal)
{
	SetProperty(0xb, VT_I2, propVal);
}

short CPercent::GetPortionID()
{
	short result;
	GetProperty(0xc, VT_I2, (void*)&result);
	return result;
}

void CPercent::SetPortionID(short propVal)
{
	SetProperty(0xc, VT_I2, propVal);
}

unsigned long CPercent::GetPortionColor()
{
	unsigned long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetPortionColor(unsigned long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

CPicture CPercent::GetPortionPicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0xe, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CPercent::SetPortionPicture(LPDISPATCH propVal)
{
	SetProperty(0xe, VT_DISPATCH, propVal);
}

double CPercent::GetPortionValue()
{
	double result;
	GetProperty(0xf, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetPortionValue(double propVal)
{
	SetProperty(0xf, VT_R8, propVal);
}

unsigned long CPercent::GetPortionDigitalColor()
{
	unsigned long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetPortionDigitalColor(unsigned long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

double CPercent::GetPortionDigitalX()
{
	double result;
	GetProperty(0x11, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetPortionDigitalX(double propVal)
{
	SetProperty(0x11, VT_R8, propVal);
}

double CPercent::GetPortionDigitalY()
{
	double result;
	GetProperty(0x12, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetPortionDigitalY(double propVal)
{
	SetProperty(0x12, VT_R8, propVal);
}

double CPercent::GetStartAngle()
{
	double result;
	GetProperty(0x13, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetStartAngle(double propVal)
{
	SetProperty(0x13, VT_R8, propVal);
}

long CPercent::GetDigitalStyle()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetDigitalStyle(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

long CPercent::GetDirection()
{
	long result;
	GetProperty(0x15, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetDirection(long propVal)
{
	SetProperty(0x15, VT_I4, propVal);
}

double CPercent::GetMax()
{
	double result;
	GetProperty(0x16, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetMax(double propVal)
{
	SetProperty(0x16, VT_R8, propVal);
}

double CPercent::GetMin()
{
	double result;
	GetProperty(0x17, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetMin(double propVal)
{
	SetProperty(0x17, VT_R8, propVal);
}

long CPercent::GetOrientation()
{
	long result;
	GetProperty(0x18, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetOrientation(long propVal)
{
	SetProperty(0x18, VT_I4, propVal);
}

long CPercent::GetDisplayMode()
{
	long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetDisplayMode(long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

long CPercent::GetPercentMode()
{
	long result;
	GetProperty(0x1a, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetPercentMode(long propVal)
{
	SetProperty(0x1a, VT_I4, propVal);
}

OLE_COLOR CPercent::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

CString CPercent::GetFrameShape()
{
	CString result;
	GetProperty(0x1b, VT_BSTR, (void*)&result);
	return result;
}

void CPercent::SetFrameShape(LPCTSTR propVal)
{
	SetProperty(0x1b, VT_BSTR, propVal);
}

long CPercent::GetFrameStyle()
{
	long result;
	GetProperty(0x1c, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetFrameStyle(long propVal)
{
	SetProperty(0x1c, VT_I4, propVal);
}

double CPercent::GetFrameLeft()
{
	double result;
	GetProperty(0x1d, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetFrameLeft(double propVal)
{
	SetProperty(0x1d, VT_R8, propVal);
}

double CPercent::GetFrameTop()
{
	double result;
	GetProperty(0x1e, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetFrameTop(double propVal)
{
	SetProperty(0x1e, VT_R8, propVal);
}

double CPercent::GetFrameRight()
{
	double result;
	GetProperty(0x1f, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetFrameRight(double propVal)
{
	SetProperty(0x1f, VT_R8, propVal);
}

double CPercent::GetFrameBottom()
{
	double result;
	GetProperty(0x20, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetFrameBottom(double propVal)
{
	SetProperty(0x20, VT_R8, propVal);
}

unsigned long CPercent::GetFrameColor()
{
	unsigned long result;
	GetProperty(0x21, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetFrameColor(unsigned long propVal)
{
	SetProperty(0x21, VT_I4, propVal);
}

CPicture CPercent::GetFramePicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0x22, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CPercent::SetFramePicture(LPDISPATCH propVal)
{
	SetProperty(0x22, VT_DISPATCH, propVal);
}

BOOL CPercent::GetAutoRedraw()
{
	BOOL result;
	GetProperty(0x23, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetAutoRedraw(BOOL propVal)
{
	SetProperty(0x23, VT_BOOL, propVal);
}

double CPercent::GetDigitalPosition()
{
	double result;
	GetProperty(0x24, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetDigitalPosition(double propVal)
{
	SetProperty(0x24, VT_R8, propVal);
}

COleFont CPercent::GetFont()
{
	LPDISPATCH pDispatch;
	GetProperty(DISPID_FONT, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CPercent::SetFont(LPDISPATCH propVal)
{
	SetProperty(DISPID_FONT, VT_DISPATCH, propVal);
}

double CPercent::GetPortionPercent()
{
	double result;
	GetProperty(0x25, VT_R8, (void*)&result);
	return result;
}

void CPercent::SetPortionPercent(double propVal)
{
	SetProperty(0x25, VT_R8, propVal);
}

double CPercent::Get_PortionValue()
{
	double result;
	GetProperty(0x0, VT_R8, (void*)&result);
	return result;
}

void CPercent::Set_PortionValue(double propVal)
{
	SetProperty(0x0, VT_R8, propVal);
}

CString CPercent::GetFontName()
{
	CString result;
	GetProperty(0x26, VT_BSTR, (void*)&result);
	return result;
}

void CPercent::SetFontName(LPCTSTR propVal)
{
	SetProperty(0x26, VT_BSTR, propVal);
}

float CPercent::GetFontSize()
{
	float result;
	GetProperty(0x27, VT_R4, (void*)&result);
	return result;
}

void CPercent::SetFontSize(float propVal)
{
	SetProperty(0x27, VT_R4, propVal);
}

BOOL CPercent::GetFontBold()
{
	BOOL result;
	GetProperty(0x28, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetFontBold(BOOL propVal)
{
	SetProperty(0x28, VT_BOOL, propVal);
}

BOOL CPercent::GetFontItalic()
{
	BOOL result;
	GetProperty(0x29, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetFontItalic(BOOL propVal)
{
	SetProperty(0x29, VT_BOOL, propVal);
}

BOOL CPercent::GetFontStrikethru()
{
	BOOL result;
	GetProperty(0x2a, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetFontStrikethru(BOOL propVal)
{
	SetProperty(0x2a, VT_BOOL, propVal);
}

BOOL CPercent::GetFontUnderline()
{
	BOOL result;
	GetProperty(0x2b, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetFontUnderline(BOOL propVal)
{
	SetProperty(0x2b, VT_BOOL, propVal);
}

CString CPercent::GetDigitalFormat()
{
	CString result;
	GetProperty(0x2c, VT_BSTR, (void*)&result);
	return result;
}

void CPercent::SetDigitalFormat(LPCTSTR propVal)
{
	SetProperty(0x2c, VT_BSTR, propVal);
}

long CPercent::GetMouseControl()
{
	long result;
	GetProperty(0x2d, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetMouseControl(long propVal)
{
	SetProperty(0x2d, VT_I4, propVal);
}

BOOL CPercent::GetSingleBuffer()
{
	BOOL result;
	GetProperty(0x2e, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetSingleBuffer(BOOL propVal)
{
	SetProperty(0x2e, VT_BOOL, propVal);
}

BOOL CPercent::GetFocusOutline()
{
	BOOL result;
	GetProperty(0x2f, VT_BOOL, (void*)&result);
	return result;
}

void CPercent::SetFocusOutline(BOOL propVal)
{
	SetProperty(0x2f, VT_BOOL, propVal);
}

OLE_HANDLE CPercent::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

void CPercent::SetHWnd(OLE_HANDLE propVal)
{
	SetProperty(DISPID_HWND, VT_I4, propVal);
}

CString CPercent::GetConfiguration()
{
	CString result;
	GetProperty(0x30, VT_BSTR, (void*)&result);
	return result;
}

void CPercent::SetConfiguration(LPCTSTR propVal)
{
	SetProperty(0x30, VT_BSTR, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CPercent operations

void CPercent::ShowPropertyPage()
{
	InvokeHelper(0x31, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPercent::Redraw()
{
	InvokeHelper(0x32, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPercent::RedrawStatic()
{
	InvokeHelper(0x33, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CPercent::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
